<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="member">

	<insert id="insert" parameterType="member">
		insert into member (id, password, email, name, 
							post, address, phone_num, birth, 
							gender, profile_img, profile_img_ori,
							login_type)
		values (#{id}, #{password, jdbcType=VARCHAR}, #{email}, #{name}, 
				#{post, jdbcType=VARCHAR}, #{address, jdbcType=VARCHAR}, #{phone_num, jdbcType=VARCHAR}, #{birth, jdbcType=VARCHAR},
				#{gender, jdbcType=VARCHAR}, #{profile_img, jdbcType=VARCHAR}, #{profile_img_ori, jdbcType=VARCHAR},
				#{login_type})
	</insert>
	
	<select id="memberInfo" parameterType="java.util.Map" resultType="member">
		select * 
		from member 
		where ${field} = #{value}
		and login_type = #{login_type}
	</select>
	
	<select id="memberInfoId" parameterType="String" resultType="member">
		select * 
		from member 
		where id = #{value}
	</select>
	
	<update id="update" parameterType="member">
		update member
		set password = #{password, jdbcType=VARCHAR},
			email = #{email, jdbcType=VARCHAR},
			name = #{name, jdbcType=VARCHAR}, 
			post = #{post, jdbcType=VARCHAR},
			address = #{address, jdbcType=VARCHAR},
			phone_num = #{phone_num, jdbcType=VARCHAR},
			birth = #{birth, jdbcType=VARCHAR}, 
			gender = #{gender, jdbcType=VARCHAR},
			profile_img = #{profile_img, jdbcType=VARCHAR},
			profile_img_ori = #{profile_img_ori, jdbcType=VARCHAR}
		where id = #{id}
	</update>
	
	<select id="search" parameterType="java.util.Map" resultType="member">
		select *
		from member
		where id != #{sessionId}
		and (id like '%${search}%'
		or name like '%${search}%')
		order by name
	</select>
	
	<select id="existRoom" parameterType="java.util.Map" resultType="com.naver.myhome.main.domain.ChatRoom">
		select *
		from chat_room
		where num_of = #{length}
		and num in (
			select ${myId}.chat_room_num
			from chat_join ${myId}
			<foreach collection="chatMembers" item="item">
				join chat_join ${item}
				on ${myId}.chat_room_num = ${item}.chat_room_num
			</foreach>
				and ${myId}.member_id = #{myId}
			<foreach collection="chatMembers" item="item">
				and ${item}.member_id = #{item}
			</foreach>
		)
	</select>
	
	<insert id="insertChatRoom" parameterType="int">
		insert into chat_room
		values(chat_room_seq.nextval, #{num_of})
	</insert>
	
	<select id="getLastChatRoomNum" resultType="int">
		select max(num) from chat_room
	</select>
	
	<insert id="insertChatJoin" parameterType="com.naver.myhome.main.domain.ChatJoin">
		insert into chat_join
		values (chat_join_seq.nextval, #{member_id}, #{chat_room_num})
	</insert>
	
	<select id="roomList" parameterType="String" resultType="com.naver.myhome.main.domain.ChatJoin">
		select chat_room_num
		from chat_join
		where member_id = #{value}
		order by chat_room_num desc
	</select>
	
	<select id="roomMember" parameterType="int" resultType="com.naver.myhome.main.domain.ChatJoin">
		select member_id
		from chat_join
		where chat_room_num = #{value}
	</select>
	
</mapper>